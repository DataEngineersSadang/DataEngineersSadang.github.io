{"componentChunkName":"component---src-templates-blog-post-js","path":"/week-3/","result":{"data":{"site":{"siteMetadata":{"title":"Sadang DE Study"}},"markdownRemark":{"id":"67984533-506b-5de4-b8ee-573db5ef267a","excerpt":"1. 프로젝트 목적 데이터 ETL 프로젝트를 구현해나가며, 흔히 사용하는 Tool들의 기능 및 목적을 공부하기 위해, 간단한 파이프라인을 설계하여, 함께 공부해보고자 한다 간단한 프로젝트지만, 목적성이 있으면 하여, 일상에서 밀접한 context…","html":"<h1>1. 프로젝트 목적</h1>\n<p>데이터 ETL 프로젝트를 구현해나가며, 흔히 사용하는 Tool들의 기능 및 목적을 공부하기 위해, 간단한 파이프라인을 설계하여, 함께 공부해보고자 한다</p>\n<blockquote>\n<p>간단한 프로젝트지만, 목적성이 있으면 하여, 일상에서 밀접한 context를 주제로 선정하기로 했다.\r\n최근 시위 및 사고, 지연 등으로 열차가 지연되는 사례가 잦아, 실시간 트윗들을 대시보드 형태로 시각화해주는 것은 어떨까</p>\n</blockquote>\n<h1>2. 데이터 수집하기</h1>\n<h2>지하철 역 정보 크롤링</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\r\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\r\n<span class=\"token keyword\">from</span> html_table_parser <span class=\"token keyword\">import</span> parser_functions\r\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\r\n\r\nreq <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://ko.wikipedia.org/wiki/%EC%88%98%EB%8F%84%EA%B6%8C_%EC%A0%84%EC%B2%A0%EC%97%AD_%EB%AA%A9%EB%A1%9D\"</span><span class=\"token punctuation\">)</span>\r\nsoup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\r\ntables <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"table\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"wikitable\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n\r\nstations_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> tables<span class=\"token punctuation\">:</span>\r\n    table <span class=\"token operator\">=</span> parser_functions<span class=\"token punctuation\">.</span>make2d<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\r\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data <span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">for</span> station <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'철도역'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n        stations_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>station<span class=\"token punctuation\">)</span>\r\nstations_list</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> station <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>stations_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    stations_text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\r\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">25</span><span class=\"token punctuation\">:</span>\r\n        stations_text <span class=\"token operator\">+=</span> station <span class=\"token operator\">+</span> <span class=\"token string\">\"역 OR \"</span>\r\n<span class=\"token comment\"># 역 리스트 n size chunk로 분할하기</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">divide_chunks</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    total <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        total<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> total\r\n\r\n<span class=\"token comment\"># 역 40개씩 총 Rule 20개로 split하기</span>\r\nnum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\n<span class=\"token keyword\">for</span> chunk <span class=\"token keyword\">in</span> divide_chunks<span class=\"token punctuation\">(</span>stations_list<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\r\n    stations_text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\r\n    <span class=\"token keyword\">for</span> station <span class=\"token keyword\">in</span> chunk<span class=\"token punctuation\">:</span>\r\n        stations_text <span class=\"token operator\">+=</span> station <span class=\"token operator\">+</span> <span class=\"token string\">\"역 OR \"</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> stations_text<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details>\r\n<summary>수집한 전체 역명 모음.zip</summary>\r\n<div markdown=\"1\">       \r\n가능역 OR 가락시장역 OR 가락시장역 OR 가산디지털단지역 OR 가산디지털단지역 OR 가양역 OR 가오리역 OR 가재울역 OR 가정역 OR 가정중앙시장역 OR 가좌역 OR 가천대역 OR 가평역 OR 간석역 OR 간석오거리역 OR 갈매역 OR 갈산역 OR 강남역 OR 강남역 OR 강남구청역 OR 강남구청역 OR 강남대역 OR 강동역 OR 강동구청역 OR 강매역 OR 강변역 OR 강일역 OR 강촌역 OR 개롱역 OR 개봉역 OR 개포동역 OR 개화역 OR 개화산역 OR 거여역 OR 건대입구역 OR 건대입구역 OR 걸포북변역 OR 검단사거리역 OR 검단오류역 OR 검바위역 OR 검암역 OR 검암역 OR 경기광주역 OR 경기도청북부청사역 OR 경마공원역 OR 경복궁역 OR 경인교대입구역 OR 경전철의정부역 OR 경찰병원역 OR 계산역 OR 계양역 OR 계양역 OR 고덕역 OR 고려대역 OR 고색역 OR 고속터미널역 OR 고속터미널역 OR 고속터미널역 OR 고잔역 OR 고잔역 OR 고진역 OR 고촌역 OR 곡산역 OR 곤제역 OR 곤지암역 OR 공덕역 OR 공덕역 OR 공덕역 OR 공덕역 OR 공릉역 OR 공항시장역 OR 공항화물청사역 OR 과천역 OR 관악역 OR 관악산역 OR 광교역 OR 광교중앙역 OR 광나루역 OR 광명역 OR 광명사거리역 OR 광운대역 OR 광운대역 OR 광화문역 OR 광흥창역 OR 교대역 OR 교대역 OR 구래역 OR 구로역 OR 구로디지털단지역 OR 구룡역 OR 구리역 OR 구반포역 OR 구산역 OR 구성역 OR 구의역 OR 구일역 OR 구파발역 OR 국수역 OR 국제업무지구역 OR 국회의사당역 OR 군자역 OR 군자역 OR 군포역 OR 굴봉산역 OR 굴포천역 OR 굽은다리역 OR 귤현역 OR 금곡역 OR 금릉역 OR 금정역 OR 금정역 OR 금천구청역 OR 금촌역 OR 금호역 OR 기흥역 OR 기흥역 OR 길동역 OR 길음역 OR 김량장역 OR 김유정역 OR 김포공항역 OR 김포공항역 OR 김포공항역 OR 김포공항역 OR 까치산역 OR 까치산역 OR 까치울역 OR 낙성대역 OR 남구로역 OR 남동구청역 OR 남동인더스파크역 OR 남부터미널역 OR 남성역 OR 남영역 OR 남위례역 OR 남춘천역 OR 남태령역 OR 남한산성입구역 OR 내방역 OR 노들역 OR 노량진역 OR 노량진역 OR 노원역 OR 노원역 OR 녹번역 OR 녹사평역 OR 녹양역 OR 녹천역 OR 논현역 OR 논현역 OR 능곡역 OR 단대오거리역 OR 달미역 OR 달월역 OR 답십리역 OR 당고개역 OR 당곡역 OR 당산역 OR 당산역 OR 당정역 OR 대곡역 OR 대곡역 OR 대공원역 OR 대림역 OR 대림역 OR 대모산입구역 OR 대방역 OR 대방역 OR 대성리역 OR 대야미역 OR 대청역 OR 대치역 OR 대화역 OR 대흥역 OR 덕계역 OR 덕소역 OR 덕정역 OR 도곡역 OR 도곡역 OR 도농역 OR 도라산역 OR 도림천역 OR 도봉역 OR 도봉산역 OR 도봉산역 OR 도심역 OR 도원역 OR 도화역 OR 독립문역 OR 독바위역 OR 독산역 OR 독정역 OR 돌곶이역 OR 동대문역 OR 동대문역 OR 동대문역사문화공원역 OR 동대문역사문화공원역 OR 동대문역사문화공원역 OR 동대입구역 OR 동두천역 OR 동두천중앙역 OR 동묘앞역 OR 동묘앞역 OR 동막역 OR 동백역 OR 동수역 OR 동암역 OR 동오역 OR 동인천역 OR 동작역 OR 동작역 OR 동천역 OR 동춘역 OR 두정역 OR 둔전역 OR 둔촌동역 OR 둔촌오륜역 OR 등촌역 OR 디지털미디어시티역 OR 디지털미디어시티역 OR 디지털미디어시티역 OR 뚝섬역 OR 뚝섬유원지역 OR 마곡역 OR 마곡나루역 OR 마곡나루역 OR 마두역 OR 마들역 OR 마산역 OR 마석역 OR 마장역 OR 마전역 OR 마천역 OR 마포역 OR 마포구청역 OR 만수역 OR 망우역 OR 망우역 OR 망원역 OR 망월사역 OR 망포역 OR 매교역 OR 매봉역 OR 매탄권선역 OR 먹골역 OR 면목역 OR 명동역 OR 명일역 OR 명지대역 OR 명학역 OR 모란역 OR 모란역 OR 모래내시장역 OR 목동역 OR 몽촌토성역 OR 무악재역 OR 문래역 OR 문산역 OR 문정역 OR 문학경기장역 OR 미금역 OR 미금역 OR 미사역 OR 미아역 OR 미아사거리역 OR 박촌역 OR 반월역 OR 반포역 OR 발곡역 OR 발산역 OR 방배역 OR 방이역 OR 방학역 OR 방화역 OR 배방역 OR 백마역 OR 백석역 OR 백양리역 OR 백운역 OR 버티고개역 OR 범계역 OR 범골역 OR 별내역 OR 별내별가람역 OR 병점역 OR 보라매역 OR 보라매역 OR 보라매공원역 OR 보라매병원역 OR 보산역 OR 보문역 OR 보문역 OR 보정역 OR 보평역 OR 복정역 OR 복정역 OR 봉명역 OR 봉은사역 OR 봉천역 OR 봉화산역 OR 부개역 OR 부발역 OR 부천역 OR 부천시청역 OR 부천종합운동장역 OR 부평역 OR 부평역 OR 부평구청역 OR 부평구청역 OR 부평삼거리역 OR 부평시장역 OR 북한산보국문역 OR 북한산우이역 OR 불광역 OR 불광역 OR 사가정역 OR 사당역 OR 사당역 OR 사리역 OR 사릉역 OR 사우역 OR 사평역 OR 산곡역 OR 산본역 OR 산성역 OR 삼가역 OR 삼각지역 OR 삼각지역 OR 삼동역 OR 삼산체육관역 OR 삼성역 OR 삼성중앙역 OR 삼송역 OR 삼양역 OR 삼양사거리역 OR 삼전역 OR 상갈역 OR 상계역 OR 상도역 OR 상동역 OR 상록수역 OR 상봉역 OR 상봉역 OR 상봉역 OR 상수역 OR 상왕십리역 OR 상월곡역 OR 상일동역 OR 상천역 OR 상현역 OR 새말역 OR 새절역 OR 샛강역 OR 샛강역 OR 서강대역 OR 서구청역 OR 서대문역 OR 서동탄역 OR 서부여성회관역 OR 서빙고역 OR 서원역 OR 서울대입구역 OR 서울대벤처타운역 OR 서울지방병무청역 OR 서울숲역 OR 서울역역 OR 서울역역 OR 서울역역 OR 서울역역 OR 서정리역 OR 서초역 OR 서현역 OR 석계역 OR 석계역 OR 석남역 OR 석남역 OR 석바위시장역 OR 석수역 OR 석천사거리역 OR 석촌역 OR 석촌역 OR 석촌고분역 OR 선릉역 OR 선릉역 OR 선바위역 OR 선부역 OR 선유도역 OR 선정릉역 OR 선정릉역 OR 선학역 OR 성균관대역 OR 성복역 OR 성수역 OR 성신여대입구역 OR 성신여대입구역 OR 성환역 OR 세류역 OR 세마역 OR 세종대왕릉역 OR 센트럴파크역 OR 소래포구역 OR 소사역 OR 소사역 OR 소새울역 OR 소요산역 OR 솔샘역 OR 솔밭공원역 OR 송내역 OR 송도역 OR 송도달빛축제공원역 OR 송산역 OR 송정역 OR 송탄역 OR 송파역 OR 송파나루역 OR 수내역 OR 수락산역 OR 수리산역 OR 수색역 OR 수서역 OR 수서역 OR 수원역 OR 수원역 OR 수원시청역 OR 수유역 OR 수지구청역 OR 수진역 OR 숙대입구역 OR 숭실대입구역 OR 숭의역 OR 시민공원역 OR 시우역 OR 시청역 OR 시청역 OR 시청·용인대역 OR 시흥능곡역 OR 시흥대야역 OR 시흥시청역 OR 신갈역 OR 신금호역 OR 신길역 OR 신길역 OR 신길온천역 OR 신길온천역 OR 신내역 OR 신내역 OR 신논현역 OR 신논현역 OR 신답역 OR 신당역 OR 신당역 OR 신대방역 OR 신대방삼거리역 OR 신도림역 OR 신도림역 OR 신둔도예촌역 OR 신림역 OR 신림역 OR 신목동역 OR 신반포역 OR 신방화역 OR 신사역 OR 신사역 OR 신설동역 OR 신설동역 OR 신설동역 OR 신연수역 OR 신용산역 OR 신원역 OR 신이문역 OR 신정역 OR 신정네거리역 OR 신중동역 OR 신창역 OR 신천역 OR 신촌(2)역 OR 신촌(경)역 OR 신포역 OR 신풍역 OR 신현역 OR 신흥역 OR 쌍문역 OR 쌍용역 OR 아산역 OR 아시아드경기장역 OR 아신역 OR 아차산역 OR 아현역 OR 안국역 OR 안산역 OR 안산역 OR 안암역 OR 안양역 OR 암사역 OR 압구정역 OR 압구정로데오역 OR 애오개역 OR 야당역 OR 야목역 OR 야탑역 OR 약수역 OR 약수역 OR 양수역 OR 양원역 OR 양재역 OR 양재역 OR 양재시민의숲역 OR 양정역 OR 양주역 OR 양천구청역 OR 양천향교역 OR 양촌역 OR 양평(5)역 OR 양평(중)역 OR 어룡역 OR 어린이대공원역 OR 어정역 OR 어천역 OR 언주역 OR 여의나루역 OR 여의도역 OR 여의도역 OR 여주역 OR 역곡역 OR 역삼역 OR 역촌역 OR 연수역 OR 연신내역 OR 연신내역 OR 염창역 OR 영등포역 OR 영등포구청역 OR 영등포구청역 OR 영등포시장역 OR 영종역 OR 영통역 OR 예술회관역 OR 오금역 OR 오금역 OR 오남역 OR 오류동역 OR 오리역 OR 오목교역 OR 오목천역 OR 오빈역 OR 오산역 OR 오산대역 OR 오이도역 OR 오이도역 OR 옥수역 OR 옥수역 OR 온수역 OR 온수역 OR 온양온천역 OR 올림픽공원역 OR 올림픽공원역 OR 완정역 OR 왕길역 OR 왕십리역 OR 왕십리역 OR 왕십리역 OR 왕십리역 OR 외대앞역 OR 용답역 OR 용두역 OR 용마산역 OR 용문역 OR 용산역 OR 용산역 OR 우장산역 OR 운길산역 OR 운동장·송담대역 OR 운서역 OR 운양역 OR 운연역 OR 운정역 OR 운천역 OR 원당역 OR 원덕역 OR 원시역 OR 원인재역 OR 원인재역 OR 원흥역 OR 월계역 OR 월곡역 OR 월곶역 OR 월드컵경기장역 OR 월롱역 OR 을지로입구역 OR 을지로3가역 OR 을지로3가역 OR 을지로4가역 OR 을지로4가역 OR 응봉역 OR 응암역 OR 의왕역 OR 의정부역 OR 의정부시청역 OR 의정부중앙역 OR 이대역 OR 이매역 OR 이매역 OR 이수역 OR 이수역 OR 이천역 OR 이촌역 OR 이촌역 OR 이태원역 OR 인덕원역 OR 인천역 OR 인천역 OR 인천가좌역 OR 인천공항1터미널역 OR 인천공항2터미널역 OR 인천논현역 OR 인천대공원역 OR 인천대입구역 OR 인천시청역 OR 인천시청역 OR 인천터미널역 OR 인하대역 OR 일산역 OR 일원역 OR 임진강역 OR 임학역 OR 작전역 OR 잠실역 OR 잠실역 OR 잠실나루역 OR 잠실새내역 OR 잠원역 OR 장기역 OR 장승배기역 OR 장암역 OR 장지역 OR 장한평역 OR 전대·에버랜드역 OR 정릉역 OR 정발산역 OR 정부과천청사역 OR 정왕역 OR 정왕역 OR 정자역 OR 정자역 OR 제기동역 OR 제물포역 OR 종각역 OR 종로3가역 OR 종로3가역 OR 종로3가역 OR 종로5가역 OR 종합운동장역 OR 종합운동장역 OR 주안역 OR 주안역 OR 주안국가산단역 OR 주엽역 OR 죽전역 OR 중계역 OR 중곡역 OR 중동역 OR 중랑역 OR 중랑역 OR 중앙역 OR 중앙역 OR 중앙보훈병원역 OR 중화역 OR 증미역 OR 증산역 OR 지석역 OR 지식정보단지역 OR 지축역 OR 지평역 OR 지행역 OR 직산역 OR 진위역 OR 진접역 OR 창동역 OR 창동역 OR 창신역 OR 천마산역 OR 천안역 OR 천왕역 OR 천호역 OR 천호역 OR 철산역 OR 청구역 OR 청구역 OR 청담역 OR 청라국제도시역 OR 청량리역 OR 청량리역 OR 청량리역 OR 청량리역 OR 청명역 OR 청평역 OR 초당역 OR 초월역 OR 초지역 OR 초지역 OR 초지역 OR 춘의역 OR 춘천역 OR 충무로역 OR 충무로역 OR 충정로역 OR 충정로역 OR 캠퍼스타운역 OR 탄현역 OR 탑석역 OR 탕정역 OR 태릉입구역 OR 태릉입구역 OR 태평역 OR 테크노파크역 OR 퇴계원역 OR 파주역 OR 판교역 OR 판교역 OR 팔당역 OR 평내호평역 OR 평촌역 OR 평택역 OR 평택지제역 OR 풍무역 OR 풍산역 OR 하계역 OR 하남검단산역 OR 하남시청역 OR 하남풍산역 OR 학동역 OR 학여울역 OR 한강진역 OR 한남역 OR 한대앞역 OR 한대앞역 OR 한성대입구역 OR 한성백제역 OR 한양대역 OR 한티역 OR 합정역 OR 합정역 OR 행당역 OR 행신역 OR 혜화역 OR 호구포역 OR 홍대입구역 OR 홍대입구역 OR 홍대입구역 OR 홍제역 OR 화계역 OR 화곡역 OR 화랑대역 OR 화서역 OR 화전역 OR 화정역 OR 회기역 OR 회기역 OR 회기역 OR 회룡역 OR 회룡역 OR 회현역 OR 효자역 OR 효창공원앞역 OR 효창공원앞역 OR 흑석역 OR 흥선역 OR 4·19민주묘지역\r\n</div>\r\n</details>\n<h2>Twitter Streaming API</h2>\n<p><a href=\"https://github.com/twitterdev/Twitter-API-v2-sample-code/blob/main/Filtered-Stream/filtered_stream.py\">Tiwtter 라이브러리 git</a></p>\n<h3>1. twitter api 세팅</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\r\nTWIT_API_BEARER <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"TWIT_API_BEARER\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>2. Streaming Client 정의</h3>\n<p>tweepy의 Streaming Client를 상속하여, on_data 메서드에서 파싱 처리</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TwitterStream</span><span class=\"token punctuation\">(</span>tweepy<span class=\"token punctuation\">.</span>StreamingClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        twit <span class=\"token operator\">=</span> status<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>twit<span class=\"token punctuation\">)</span>\r\n\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_error</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> status_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">if</span> status_code <span class=\"token operator\">==</span><span class=\"token number\">420</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\r\n\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete_all_rules</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token comment\"># 규칙 값이 없는 경우 None 으로 들어온다.</span>\r\n    <span class=\"token keyword\">if</span> rules <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> rules<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\r\n    stream_rules <span class=\"token operator\">=</span> rules<span class=\"token punctuation\">.</span>data\r\n    ids <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> rule<span class=\"token punctuation\">:</span> rule<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> stream_rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    client<span class=\"token punctuation\">.</span>delete_rules<span class=\"token punctuation\">(</span>ids<span class=\"token operator\">=</span>ids<span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>3. Filter Rule 정의</h3>\n<p>streaming 규칙 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">make_rules</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token comment\"># 스트림 규칙 추가1 - 1-9호선</span>\r\n    all_lines <span class=\"token operator\">=</span> <span class=\"token string\">\"1호선 OR 2호선 OR 3호선 OR 4호선 OR 5호선 OR 6호선 OR 7호선 OR 8호선 OR 9호선 OR 경의중앙선 OR 신분당선 OR 수인분당선 OR 공항철도 OR 경춘선 OR 인천1호선 OR 경강선 OR 신림선\"</span>\r\n    rules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>tweepy<span class=\"token punctuation\">.</span>StreamRule<span class=\"token punctuation\">(</span>all_lines<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n    <span class=\"token comment\"># 스트림 규칙 추가2 - 모든 역을 20개의 Rule에 추가</span>\r\n    all_station_names <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;역이름 추가>\"</span>\r\n    station_list <span class=\"token operator\">=</span> all_station_names<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" OR \"</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>station_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>station_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        rules<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>\r\n            tweepy<span class=\"token punctuation\">.</span>StreamRule<span class=\"token punctuation\">(</span>\r\n                value<span class=\"token operator\">=</span><span class=\"token string\">\" OR \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>station_list<span class=\"token punctuation\">[</span>i <span class=\"token punctuation\">:</span> i <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>station_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> rules\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>4. 메인 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 트위치 클라이언트 인스턴스 생성</span>\r\nclient <span class=\"token operator\">=</span> TwitterStream<span class=\"token punctuation\">(</span>TWIT_API_BEARER<span class=\"token punctuation\">)</span>\r\nrules <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>get_rules<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 기존 모든 규칙 제거</span>\r\ndelete_all_rules<span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> rules<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 지하철 호선, 역명 규칙 생성</span>\r\nrules <span class=\"token operator\">=</span> make_rules<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># client 스트림 규칙 추가</span>\r\n<span class=\"token keyword\">for</span> rule <span class=\"token keyword\">in</span> rules<span class=\"token punctuation\">:</span>\r\n    client<span class=\"token punctuation\">.</span>add_rules<span class=\"token punctuation\">(</span>rule<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">.</span>get_rules<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>5. 스트림 시작(한국어 필터링을 위한, \"lang\" 필드 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 스트림 시작</span>\r\nclient<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<hr>\n<h2>3. Java로 Tiwtter API 수집하기</h2>\n<h3>1. 현재 streaming URI 내 존재하는 rule 찾기</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getRules</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> bearerToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rules <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultRequestConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">setCookieSpec</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieSpecs</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STANDARD</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.twitter.com/2/tweets/search/stream/rules\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">HttpGet</span> httpGet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpGet</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpGet<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer %s\"</span><span class=\"token punctuation\">,</span> bearerToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpGet<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpGet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpEntity</span> entity <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> entity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">JSONObject</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token class-name\">JSONArray</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JSONArray</span><span class=\"token punctuation\">)</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token class-name\">JSONObject</span> jsonObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">)</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    rules<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>jsonObject<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> rules<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>2. 찾은 rule 제거</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteRules</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> bearerToken<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> existingRules<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultRequestConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">setCookieSpec</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieSpecs</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STANDARD</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.twitter.com/2/tweets/search/stream/rules\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">HttpPost</span> httpPost <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpPost</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer %s\"</span><span class=\"token punctuation\">,</span> bearerToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">StringEntity</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringEntity</span><span class=\"token punctuation\">(</span><span class=\"token function\">getFormattedString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{ \\\"delete\\\": { \\\"ids\\\": [%s]}}\"</span><span class=\"token punctuation\">,</span> existingRules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setEntity</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpPost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpEntity</span> entity <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> entity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>3. 원하는 rule 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createRules</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> bearerToken<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rules<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultRequestConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">setCookieSpec</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieSpecs</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STANDARD</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.twitter.com/2/tweets/search/stream/rules\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// POST method</span>\r\n        <span class=\"token class-name\">HttpPost</span> httpPost <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpPost</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer %s\"</span><span class=\"token punctuation\">,</span> bearerToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">StringEntity</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringEntity</span><span class=\"token punctuation\">(</span><span class=\"token function\">getFormattedString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{\\\"add\\\": [%s]}\"</span><span class=\"token punctuation\">,</span> rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setEntity</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpPost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpEntity</span> entity <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> entity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>3-1. rule에 사용된 언어에 따라 encoding 다르게 적용 필요</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token class-name\">StringEntity</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringEntity</span><span class=\"token punctuation\">(</span><span class=\"token function\">getFormattedString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{\\\"add\\\": [%s]}\"</span><span class=\"token punctuation\">,</span> rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>4. streaming 진행</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">connectStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> bearerToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span> <span class=\"token punctuation\">{</span>\r\n\r\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultRequestConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">custom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">setCookieSpec</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieSpecs</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STANDARD</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.twitter.com/2/tweets/search/stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// GET Method 사용해서 url 호출</span>\r\n        <span class=\"token class-name\">HttpGet</span> httpGet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpGet</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        httpGet<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer %s\"</span><span class=\"token punctuation\">,</span> bearerToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">HttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpGet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">HttpEntity</span> entity <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">JSONArray</span> tweets <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> entity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>line <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                    line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'{'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token class-name\">JSONObject</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    tweets<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n                    line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<blockquote>\n<p>고민거리들.<br>\n생각보다 \"역명\"으로 데이터를 조회했을 때, 수집량이 많지 않았다.</p>\n</blockquote>\n<p>twitter API로 실시간 데이터 처리를 해보았는데, 다음 주에는 Spark를 사용하여, 데이터 처리를 해보면서, Spark에 대한 기초를 공부해보자.</p>","frontmatter":{"title":"STEP1 Twitter API를 이용하여, 지하철 정보 수집하기","date":"January 24, 2023","description":"Twitter API를 활용하여 간단한 파이프라인 만들어보기 PROJ","tags":["Twitter API"]}},"previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null},"pageContext":{"id":"67984533-506b-5de4-b8ee-573db5ef267a","previousPostId":"0eae7d46-698b-5e09-8a02-a9509384d4a4","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}